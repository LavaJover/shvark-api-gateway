basePath: /api/v1
definitions:
  github_com_LavaJover_shvark-api-gateway_internal_delivery_http_dto_banking_response.BankDetail:
    properties:
      bank_name:
        type: string
      card_number:
        type: string
      country:
        type: string
      currency:
        type: string
      delay:
        type: string
      enabled:
        type: boolean
      id:
        type: string
      max_amount:
        type: number
      max_amount_day:
        type: integer
      max_amount_month:
        type: integer
      max_orders_simultaneosly:
        type: integer
      min_amount:
        type: number
      owner:
        type: string
      payment_system:
        type: string
      phone:
        type: string
      trader_id:
        type: string
    type: object
  github_com_LavaJover_shvark-api-gateway_internal_delivery_http_dto_order_response.BankDetail:
    properties:
      bank_name:
        type: string
      country:
        type: string
      currency:
        type: string
      delay:
        type: string
      enabled:
        type: boolean
      id:
        type: string
      max_amount:
        type: number
      min_amount:
        type: number
      payment_system:
        type: string
      trader_id:
        type: string
    type: object
  handlers.ErrorResponse:
    properties:
      error:
        example: invalid data
        type: string
    type: object
  request.AddPolicyRequest:
    properties:
      action:
        type: string
      object:
        type: string
      role:
        type: string
    required:
    - action
    - object
    - role
    type: object
  request.AssignRoleRequest:
    properties:
      role:
        type: string
      user_id:
        type: string
    required:
    - role
    - user_id
    type: object
  request.BankDetail:
    properties:
      bank_name:
        type: string
      card_number:
        type: string
      country:
        type: string
      currency:
        type: string
      delay:
        type: string
      enabled:
        type: boolean
      id:
        type: string
      max_amount:
        type: number
      max_amount_day:
        type: integer
      max_amount_month:
        type: integer
      max_orders_simultaneosly:
        type: integer
      min_amount:
        type: number
      owner:
        type: string
      payment_system:
        type: string
      phone:
        type: string
      trader_id:
        type: string
    type: object
  request.CheckPermissionRequest:
    properties:
      action:
        type: string
      object:
        type: string
      user_id:
        type: string
    required:
    - action
    - object
    - user_id
    type: object
  request.CreateBankDetailRequest:
    properties:
      bank_name:
        type: string
      card_number:
        type: string
      country:
        type: string
      currency:
        type: string
      delay:
        example: 100s
        type: string
      enabled:
        type: boolean
      max_amount:
        type: number
      max_amount_day:
        type: integer
      max_amount_month:
        type: integer
      max_orders_simultaneosly:
        type: integer
      min_amount:
        type: number
      owner:
        type: string
      payment_system:
        type: string
      phone:
        type: string
      trader_id:
        type: string
    type: object
  request.CreateOrderRequest:
    properties:
      amount:
        type: number
      client_data:
        type: string
      country:
        type: string
      currency:
        type: string
      merchant_id:
        type: string
      metadata:
        type: string
      payment_system:
        type: string
    type: object
  request.DeletePolicyRequest:
    properties:
      action:
        type: string
      object:
        type: string
      role:
        type: string
    required:
    - action
    - object
    - role
    type: object
  request.LoginRequest:
    properties:
      login:
        example: CoolUserLogin
        type: string
      password:
        example: securepass123
        type: string
    type: object
  request.RegisterRequest:
    properties:
      login:
        type: string
      password:
        minLength: 8
        type: string
      username:
        type: string
    required:
    - login
    - password
    - username
    type: object
  request.RevokeRoleRequest:
    properties:
      role:
        type: string
      user_id:
        type: string
    required:
    - role
    - user_id
    type: object
  request.UpdateBankDetailRequest:
    properties:
      bank_detail:
        $ref: '#/definitions/request.BankDetail'
    type: object
  request.ValidateTokenRequest:
    properties:
      token:
        type: string
    type: object
  response.AddPolicyResponse:
    properties:
      success:
        type: boolean
    required:
    - success
    type: object
  response.AssignRoleResponse:
    properties:
      success:
        type: boolean
    required:
    - success
    type: object
  response.CheckPermissionResponse:
    properties:
      allowed:
        type: boolean
    required:
    - allowed
    type: object
  response.CreateBankDetailResponse:
    properties:
      bank_detail_id:
        type: string
      message:
        type: string
    type: object
  response.CreateOrderResponse:
    properties:
      amount:
        type: number
      bankDetail:
        $ref: '#/definitions/github_com_LavaJover_shvark-api-gateway_internal_delivery_http_dto_order_response.BankDetail'
      order_id:
        type: string
      order_status:
        type: string
    type: object
  response.DeletePolicyResponse:
    properties:
      success:
        type: boolean
    required:
    - success
    type: object
  response.GetBankDetailByIDResponse:
    properties:
      bank_detail:
        $ref: '#/definitions/github_com_LavaJover_shvark-api-gateway_internal_delivery_http_dto_banking_response.BankDetail'
    type: object
  response.GetBankDetailsByTraderIDResponse:
    properties:
      bank_details:
        items:
          $ref: '#/definitions/github_com_LavaJover_shvark-api-gateway_internal_delivery_http_dto_banking_response.BankDetail'
        type: array
    type: object
  response.GetProfileByIDResponse:
    properties:
      avatar_url:
        type: string
      profile_id:
        type: string
      tg_link:
        type: string
      user_id:
        type: string
    type: object
  response.GetUserByIDResponse:
    properties:
      login:
        type: string
      password:
        type: string
      user_id:
        type: string
      username:
        type: string
    type: object
  response.LoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  response.RegisterResponse:
    properties:
      user_id:
        example: 1d6ab366-4fca-4bcc-972d-875c35ea939a
        type: string
    type: object
  response.RevokeRoleResponse:
    properties:
      success:
        type: boolean
    required:
    - success
    type: object
  response.UpdateBankDetailResponse:
    type: object
  response.ValidateTokenResponse:
    properties:
      user_id:
        example: 1d6ab366-4fca-4bcc-972d-875c35ea939a
        type: string
      valid:
        type: boolean
    type: object
host: localhost:8080
info:
  contact: {}
  description: REST API for ShvarkPay
  title: Shvark API Gateway
  version: "1.0"
paths:
  /banking/details:
    patch:
      consumes:
      - application/json
      description: Update bank detail
      parameters:
      - description: New data for bank detail with given ID
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.UpdateBankDetailRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UpdateBankDetailResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Update bank detail
      tags:
      - banking
    post:
      consumes:
      - application/json
      description: Create new bank detail
      parameters:
      - description: New bank details
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.CreateBankDetailRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.CreateBankDetailResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Create new bank detail
      tags:
      - banking
  /banking/details/:
    get:
      consumes:
      - application/json
      description: Get bank details by trader ID
      parameters:
      - description: trader uuid
        in: query
        name: trader
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetBankDetailsByTraderIDResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get bank details by trader ID
      tags:
      - banking
  /banking/details/{uuid}:
    get:
      consumes:
      - application/json
      description: Get bank detail by ID
      parameters:
      - description: bank detail UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetBankDetailByIDResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get bank detail by ID
      tags:
      - banking
  /login:
    post:
      consumes:
      - application/json
      description: Log in user account
      parameters:
      - description: Login credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: User login
      tags:
      - Auth
  /orders:
    post:
      consumes:
      - application/json
      description: Create new Pay-In order
      parameters:
      - description: new order details
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.CreateOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CreateOrderResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Create new Pay-In order
      tags:
      - orders
  /profiles/{uuid}:
    get:
      consumes:
      - application/json
      description: Get profile by uuid
      parameters:
      - description: Profile uuid
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetProfileByIDResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get profile by uuid
      tags:
      - profiles
  /rbac/permissions:
    post:
      consumes:
      - application/json
      description: Check user permission
      parameters:
      - description: Permission subject, object, action
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.CheckPermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CheckPermissionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Check user permission
      tags:
      - RBAC
  /rbac/policies:
    delete:
      consumes:
      - application/json
      description: Delete policy
      parameters:
      - description: Policy details to delete
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.DeletePolicyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.DeletePolicyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Delete policy
      tags:
      - RBAC
    post:
      consumes:
      - application/json
      description: Add policy
      parameters:
      - description: New policy details
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.AddPolicyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.AddPolicyResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Add policy
      tags:
      - RBAC
  /rbac/roles:
    delete:
      consumes:
      - application/json
      description: Revoke role
      parameters:
      - description: Role assigned to user to revoke
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.RevokeRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RevokeRoleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Revoke role
      tags:
      - RBAC
    post:
      consumes:
      - application/json
      description: Assign role
      parameters:
      - description: Role assigned to user
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.AssignRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.AssignRoleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Assign role
      tags:
      - RBAC
  /register:
    post:
      consumes:
      - application/json
      description: Creating new account
      parameters:
      - description: Registration credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: User registration
      tags:
      - Auth
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get user by UUID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.GetUserByIDResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get user by UUID
      tags:
      - users
  /validate_token:
    post:
      consumes:
      - application/json
      description: Check if JWT is valid or not
      parameters:
      - description: JWT instance
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/request.ValidateTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ValidateTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: JWT validation check-point
      tags:
      - Auth
swagger: "2.0"
