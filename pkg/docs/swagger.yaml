basePath: /api/v1
definitions:
  handlers.ErrorResponse:
    properties:
      error:
        example: invalid email
        type: string
    type: object
  handlers.GetUserByIDResponse:
    properties:
      login:
        type: string
      password:
        type: string
      user_id:
        type: string
      username:
        type: string
    type: object
  handlers.LoginRequest:
    properties:
      login:
        example: CoolUserLogin
        type: string
      password:
        example: securepass123
        type: string
    type: object
  handlers.LoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  handlers.RegisterRequest:
    properties:
      login:
        example: CoolUserLogin
        type: string
      password:
        example: securepass123
        type: string
      username:
        example: CoolUsername
        type: string
    type: object
  handlers.RegisterResponse:
    properties:
      user_id:
        example: 1d6ab366-4fca-4bcc-972d-875c35ea939a
        type: string
    type: object
  handlers.ValidateTokenRequest:
    properties:
      token:
        type: string
    type: object
  handlers.ValidateTokenResponse:
    properties:
      user_id:
        example: 1d6ab366-4fca-4bcc-972d-875c35ea939a
        type: string
      valid:
        type: boolean
    type: object
host: localhost:8080
info:
  contact: {}
  description: REST API for ShvarkPay
  title: Shvark API Gateway
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Log in user account
      parameters:
      - description: Login credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: User login
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      description: Creating new account
      parameters:
      - description: Registration credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: User registration
      tags:
      - Auth
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get user by UUID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.GetUserByIDResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get user by UUID
      tags:
      - users
  /validate_token:
    post:
      consumes:
      - application/json
      description: Check if JWT is valid or not
      parameters:
      - description: JWT instance
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.ValidateTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ValidateTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: JWT validation check-point
      tags:
      - Auth
swagger: "2.0"
